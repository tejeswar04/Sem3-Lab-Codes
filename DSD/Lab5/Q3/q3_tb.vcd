$date
	Thu Sep 14 10:39:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q3_tb $end
$var wire 1 ! f $end
$var reg 4 " W [3:0] $end
$var integer 32 # i [31:0] $end
$scope module q $end
$var wire 4 $ W [3:0] $end
$var wire 1 ! f $end
$var wire 16 % Y [0:15] $end
$scope module d $end
$var wire 1 & En $end
$var wire 4 ' W [3:0] $end
$var wire 16 ( Y [0:15] $end
$var wire 4 ) M [0:3] $end
$scope module d1 $end
$var wire 1 & En $end
$var wire 2 * W [1:0] $end
$var reg 4 + Y [0:3] $end
$upscope $end
$scope module d2 $end
$var wire 1 , En $end
$var wire 2 - W [1:0] $end
$var reg 4 . Y [0:3] $end
$upscope $end
$scope module d3 $end
$var wire 1 / En $end
$var wire 2 0 W [1:0] $end
$var reg 4 1 Y [0:3] $end
$upscope $end
$scope module d4 $end
$var wire 1 2 En $end
$var wire 2 3 W [1:0] $end
$var reg 4 4 Y [0:3] $end
$upscope $end
$scope module d5 $end
$var wire 1 5 En $end
$var wire 2 6 W [1:0] $end
$var reg 4 7 Y [0:3] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 7
b0 6
05
b0 4
b0 3
02
b0 1
b0 0
0/
b1000 .
b0 -
1,
b1000 +
b0 *
b1000 )
b1000000000000000 (
b0 '
1&
b1000000000000000 %
b0 $
b0 #
b0 "
0!
$end
#5
1!
b100000000000000 %
b100000000000000 (
b100 .
b1 -
b1 0
b1 3
b1 6
b1 "
b1 $
b1 '
b1 #
#10
0!
b10000000000000 %
b10000000000000 (
b10 .
b10 -
b10 0
b10 3
b10 6
b10 "
b10 $
b10 '
b10 #
#15
b1000000000000 %
b1000000000000 (
b1 .
b11 -
b11 0
b11 3
b11 6
b11 "
b11 $
b11 '
b11 #
#20
1!
b1000 1
1/
0,
b100 )
b100 +
b100000000000 %
b100000000000 (
b0 .
b1 *
b0 -
b0 0
b0 3
b0 6
b100 "
b100 $
b100 '
b100 #
#25
0!
b10000000000 %
b10000000000 (
b100 1
b1 -
b1 0
b1 3
b1 6
b101 "
b101 $
b101 '
b101 #
#30
1!
b1000000000 %
b1000000000 (
b10 1
b10 -
b10 0
b10 3
b10 6
b110 "
b110 $
b110 '
b110 #
#35
0!
b100000000 %
b100000000 (
b1 1
b11 -
b11 0
b11 3
b11 6
b111 "
b111 $
b111 '
b111 #
#40
1!
b1000 4
12
0/
b10 )
b10 +
b10000000 %
b10000000 (
b0 1
b10 *
b0 -
b0 0
b0 3
b0 6
b1000 "
b1000 $
b1000 '
b1000 #
#45
b1000000 %
b1000000 (
b100 4
b1 -
b1 0
b1 3
b1 6
b1001 "
b1001 $
b1001 '
b1001 #
#50
0!
b100000 %
b100000 (
b10 4
b10 -
b10 0
b10 3
b10 6
b1010 "
b1010 $
b1010 '
b1010 #
#55
b10000 %
b10000 (
b1 4
b11 -
b11 0
b11 3
b11 6
b1011 "
b1011 $
b1011 '
b1011 #
#60
0!
b1000 7
15
02
b1 )
b1 +
b1000 %
b1000 (
b0 4
b11 *
b0 -
b0 0
b0 3
b0 6
b1100 "
b1100 $
b1100 '
b1100 #
#65
1!
b100 %
b100 (
b100 7
b1 -
b1 0
b1 3
b1 6
b1101 "
b1101 $
b1101 '
b1101 #
#70
0!
b10 %
b10 (
b10 7
b10 -
b10 0
b10 3
b10 6
b1110 "
b1110 $
b1110 '
b1110 #
#75
1!
b1 %
b1 (
b1 7
b11 -
b11 0
b11 3
b11 6
b1111 "
b1111 $
b1111 '
b1111 #
#80
b10000 #
