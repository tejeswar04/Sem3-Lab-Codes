$date
	Thu Aug 31 11:13:36 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Multiplier_3b_tb $end
$var wire 6 ! p [5:0] $end
$var reg 3 " a [2:0] $end
$var reg 3 # b [2:0] $end
$scope module m1 $end
$var wire 3 $ A [2:0] $end
$var wire 3 % B [2:0] $end
$var wire 6 & P [5:0] $end
$var wire 7 ' C [6:0] $end
$scope module F1 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * cin $end
$var wire 1 + cout $end
$var wire 1 , s $end
$upscope $end
$scope module F2 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 s $end
$upscope $end
$scope module F3 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$upscope $end
$scope module F4 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; s $end
$upscope $end
$scope module F5 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cin $end
$var wire 1 ? cout $end
$var wire 1 @ s $end
$upscope $end
$scope module F6 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D cout $end
$var wire 1 E s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#20
1;
18
1,
b10 '
11
b111 !
b111 &
1(
1-
b1 #
b1 %
b111 "
b111 $
#40
b1111 !
b1111 &
1@
1=
b1010 '
16
1)
12
0(
b11 #
b11 %
b101 "
b101 $
#60
