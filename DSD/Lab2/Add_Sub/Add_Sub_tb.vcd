$date
	Thu Aug 17 10:40:19 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Add_Sub_tb $end
$var wire 1 ! cout $end
$var wire 4 " S [3:0] $end
$var reg 4 # X [3:0] $end
$var reg 4 $ Y [3:0] $end
$var reg 1 % cin $end
$scope module s $end
$var wire 4 & X [3:0] $end
$var wire 4 ' Y [3:0] $end
$var wire 1 % cin $end
$var wire 1 ! cout $end
$var wire 3 ( c [3:1] $end
$var wire 4 ) S [3:0] $end
$var wire 4 * B [3:0] $end
$scope module F1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 % cin $end
$var wire 1 - cout $end
$var wire 1 . s $end
$upscope $end
$scope module F2 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 s $end
$upscope $end
$scope module F3 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 s $end
$upscope $end
$scope module F4 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 ! cout $end
$var wire 1 < s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
0;
0:
09
18
07
16
05
04
03
12
01
10
1/
1.
0-
0,
1+
b10 *
b101 )
b10 (
b10 '
b11 &
0%
b10 $
b11 #
b101 "
0!
$end
#5
13
11
b11 (
1-
1!
0.
1,
1:
b110 "
b110 )
0<
b1011 *
19
b1011 $
b1011 '
b1011 #
b1011 &
#10
06
02
0;
0!
13
18
b1 (
07
0<
00
0:
b1 *
b111 "
b111 )
1.
0/
14
09
1%
b1110 $
b1110 '
b101 #
b101 &
#15
1!
1;
17
08
16
b111 (
12
03
0<
10
1:
b0 "
b0 )
0.
b1011 *
0+
b100 $
b100 '
b100 #
b100 &
#20
06
02
13
01
0-
0!
0;
08
b0 (
07
0,
0:
b10 *
b11 "
b11 )
1.
1+
04
0%
b10 $
b10 '
b1 #
b1 &
#25
